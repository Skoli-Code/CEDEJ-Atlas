{"version":3,"file":"0.39657020c6c7986c3be6.hot-update.js","sources":["webpack:///src/components/molecules/TemperaturesLegend/index.js?5139"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport createFragment from 'react-addons-create-fragment';\n\nimport {\n  LegendCategoryName,\n  Reduced,\n  Td,\n  Th,\n  TrName,\n  TrNameContent,\n  TemperatureLegendPattern,\n} from 'components';\n\nimport { visibleTypes } from 'utils';\n\nimport * as patternUtils from 'utils/patterns';\nimport * as aridityUtils from 'utils/aridity';\n\nconst ATh = styled(Td)`\n  font-size: 0.65rem;\n  line-height: 0.7rem;\n  .legend--print & {\n    width: 60px;\n    font-weight: bold;\n  }\n`;\n\nconst AridityName = ({ aridity }) => (\n  <ATh\n    width={40}\n    data-tip \n    data-for={`tooltip-aridity-${aridity.name}`}>\n    { aridityUtils.getName(aridity) }\n  </ATh>\n);\n\nconst ATd = styled(Td)`\n  font-size: 0.6rem;\n  line-height: 0.6rem;\n`;\n\nconst AridityPrecipitations = ({ aridity }) => (\n  <ATd>\n    P/Etp<br/>{ aridityUtils.getPrecipitations(aridity) }\n  </ATd>\n);\n\nconst AridityNames = ({ aridity, print }) => {\n  const visibleAridities = visibleTypes(aridity);\n  if(!visibleAridities.length){ return null; }\n  return [\n    <tr>\n      <TrName><TrNameContent>Aridit√©</TrNameContent></TrName>\n      { visibleAridities.map((aridity, key) => (\n        <AridityName aridity={aridity} key={key} />\n      ))}\n    </tr>,\n    print ? (\n      <tr>\n        <td></td>\n        { visibleAridities.map((aridity, key) => (\n          <AridityPrecipitations key={key} aridity={aridity} />\n        ))}\n      </tr>\n    ) : null\n  ];\n};\n\n\nconst Temperatures = ({\n  print,\n  filters: {\n    temperatures:{ summer, winter },\n    aridity,\n  },\n  layers: {\n    temperatures: { visible: showTemperatures },\n    aridity: { visible: showAridity },\n  }\n}) => {\n  const layers = {\n    temperatures: { visible: showTemperatures },\n    aridity: { visible: showAridity },\n  };\n\n  const hasVisibleAridity = showAridity && visibleTypes(aridity).length > 0;\n  const hasVisibleTemperatures = showTemperatures && (\n    visibleTypes(winter).length > 0 && visibleTypes(summer).length > 0\n  );\n \n  const patterns = patternUtils.initPatterns();\n\n  const temperatureRows = hasVisibleTemperatures ? TemperaturesRows({\n      temperatures:{summer,winter},\n      aridity,\n      patterns,\n      layers,\n    }\n  ): null;\n\n  const tempsRowsFragment = createFragment({temperatures:temperatureRows});\n  \n  const aridityNamesRows = hasVisibleAridity ? AridityNames({\n    aridity,\n    print,\n  }) : null;\n\n  const aridityNamesFragment = createFragment({aridity:aridityNamesRows});\n  \n  return (\n    <tbody>\n    {[\n      aridityNamesFragment,\n      tempsRowsFragment,\n      !hasVisibleTemperatures && hasVisibleAridity ? (\n        <TemperatureRow\n          layers={layers}\n          key={'aridity-row'}\n          aridity={aridity}\n          patterns={patterns}\n        />\n      ): null,\n    ]}\n    </tbody>\n  );\n};\n\nexport default Temperatures; \n\n\n\n// WEBPACK FOOTER //\n// src/components/molecules/TemperaturesLegend/index.js"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AACA;AACA;AASA;AACA;AACA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;;;;;AACA;AACA;AAQA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AADA;AACA;AAQA;AACA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AADA;AADA;AACA;AAKA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAOA;AAAA;AACA;AACA;AAAA;AAAA;AAFA;AAQA;AACA;AAEA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAOA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAKA;AACA;AACA;AACA;AAJA;AALA;AAeA;AACA;AACA;;;;;;;;;AA7GA;AACA;AAQA;AACA;AAQA;AACA;AAIA;AACA;AAKA;AACA;AAqBA;AACA;;;;;;;;A","sourceRoot":""}