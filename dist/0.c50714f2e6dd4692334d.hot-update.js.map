{"version":3,"file":"0.c50714f2e6dd4692334d.hot-update.js","sources":["webpack:///src/components/organisms/AridityTemperaturesLayer/index.js?4f1e"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { CanvasTiles } from 'components';\n\nimport Delegate from './delegate';\n\nclass AridityTemperaturesLayer extends CanvasTiles {\n  static propTypes = {\n    ...CanvasTiles.propTypes,\n    showAridity: PropTypes.bool, \n    showTemperatures: PropTypes.bool,\n    counts: PropTypes.shape({\n      temperatures: PropTypes.object,\n      aridity: PropTypes.object,\n    }),\n  }\n\n  static defaultProps = {\n    ...CanvasTiles.defaultProps,\n    delegate: Delegate,\n  }\n\n  updateAridityVisiblity(visibility){\n    if (!visibility) {\n      this.delegate.disableMask();\n    } else {\n      this.delegate.enableMask();\n    }\n    this.delegate.updateAridityVisibility(visibility);\n    this.redraw();\n  }\n\n  updateTemperaturesVisiblity(visibility){\n    if (!visibility) {\n      this.delegate.disableMask();\n    } else {\n      this.delegate.enableMask();\n    }\n    this.delegate.updateTemperaturesVisibility(visibility);\n    this.redraw();\n  }\n\n  updateLeafletElement(\n    {\n      showAridity: fromAridityVisibility,\n      showTemperatures: fromTemperaturesVisibility,\n      data:{\n        temperatures: fromTemps,\n        aridity:fromAridity,\n      },\n    },\n    {\n      showAridity: toAridityVisibility,\n      showTemperatures: toTemperaturesVisibility,\n      data:{\n        temperatures:toTemps,\n        aridity:toAridity,\n      },\n      counts: {\n        temperatures: tempsCounts,\n        aridity: aridityCounts,\n      },\n    }\n  ) {\n    const shouldEnableMask = (\n      (\n        (\n          tempsCounts.original != tempsCounts.current\n        ) && (\n          tempsCounts.current > 0\n        ) \n      ) || (\n        (\n          aridityCounts.original != aridityCounts.current\n        ) && (\n          aridityCounts.current > 0\n        )\n      )\n    ) && (\n      (\n        toAridityVisibility && toTemperaturesVisibility\n      ) && (\n        toTemps.features.length > 0\n      ) && (\n        toAridity.features.length > 0\n      )\n    );\n    \n    const diffAridity = fromAridity.features.length !== toAridity.features.length;\n    const diffTemps = fromTemps.features.length !== toTemps.features.length;\n    if (diffTemps || diffAridity) {\n      if (shouldEnableMask) {\n        this.delegate.enableMask();\n      } else {\n        this.delegate.disableMask();\n      }\n      this.updateData({\n        aridity:toAridity,\n        temperatures: toTemps,\n      });\n    } else {\n      this.onRendered();\n    }\n\n    if (fromAridityVisibility !== toAridityVisibility) {\n      this.updateAridityVisiblity(toAridityVisibility);\n    }\n\n    if (fromTemperaturesVisibility !== toTemperaturesVisibility) {\n      this.updateTemperaturesVisiblity(toTemperaturesVisibility);\n    }\n  }\n}\n\nexport default AridityTemperaturesLayer;\n\n\n\n// WEBPACK FOOTER //\n// src/components/organisms/AridityTemperaturesLayer/index.js"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;AACA;;;;;;;;;;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAuBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAzGA;AAGA;AACA;AACA;AACA;AACA;AAFA;;AALA;AAaA;;AA+FA;;;;;;;;;AA5GA;AACA;;;;;;;;A","sourceRoot":""}