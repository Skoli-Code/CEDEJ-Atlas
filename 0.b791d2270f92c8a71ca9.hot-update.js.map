{"version":3,"file":"0.b791d2270f92c8a71ca9.hot-update.js","sources":["webpack:///src/components/atoms/CanvasDelegate/index.js?12bd"],"sourcesContent":["import { path as d3Path } from 'd3-path';\nimport geojsonvt from 'geojson-vt';\nimport { isFunction } from 'utils';\n\n\nclass CanvasDelegate {\n  constructor(data) {\n    this.tiled = {};\n    this.tileOptions = {\n      maxZoom: 7,\n      tolerance: 2,\n      extent: 4096,\n      buffer: 64,\n      debug: 0,\n      indexMaxZoom: 3,\n      indexMaxPoints: 10000,\n      solidChildren: false,\n    };\n    this.processData(data);\n  }\n\n  processData(data) {\n    Object.keys(data).forEach(key => {\n      this.tiled[key] = geojsonvt(data[key], this.tileOptions);\n    });\n  }\n\n  getTileFeatures({ x, y, z }) {\n    const res = {};\n    Object.keys(this.tiled).forEach(key => {\n      const fTiled = this.tiled[key].getTile(z,x,y);\n      res[key] = fTiled ? fTiled.features : [];\n    });\n    return res;\n  }\n\n  createCanvas(modelCanvas) {\n    const canvas = document.createElement('canvas');\n    canvas.width = modelCanvas.width;\n    canvas.height = modelCanvas.height;\n    return canvas;\n  }\n\n  setLayer(layer) { this.layer = layer; }\n\n  updateData(data) {\n    this.processData(data);\n  }\n\n  draw() {\n    throw new Error('You have to implement the draw method !');\n  }\n  \n  drawPath(feature, ctx, pad=0) {\n    const type = feature.type;\n    const ratio = ctx.canvas.height / 4096;\n    const path = d3Path();\n    let j = 0;\n    let k = 0;\n    const glen = feature.geometry.length;\n    for (j; j < feature.geometry.length; j+=1) {\n      const geom = feature.geometry[j];\n      const sglen = geo.length;\n      if (type === 1) {\n        path.arc(\n          (geom[0] * ratio) + pad,\n          (geom[1] * ratio) + pad,\n          2,\n          0,\n          2 * Math.PI,\n          false\n        );\n        continue;\n      }\n\n      for (k = 0; k < sglen; k+=1) {\n        const p = geom[k];\n        if (k) {\n          path.lineTo((p[0] * ratio) + pad, (p[1] * ratio) + pad);\n        } else {\n          path.moveTo((p[0] * ratio) + pad, (p[1] * ratio) + pad);\n        }\n      }\n    }\n    return path;\n  }\n\n  drawArea({\n    context,\n    area,\n    fillStyle,\n    strokeStyle,\n    strokeWidth = 1,\n  }) {\n    context.lineWidth = strokeWidth;\n    context.fillStyle = fillStyle;\n    if (strokeStyle) {\n      context.strokeStyle = strokeStyle;\n    }\n    const path = new Path2D(this.drawPath(area, context));\n    if (strokeWidth > 0) {\n      context.stroke(path);\n    }\n    context.fill(path, 'evenodd');\n  }\n\n  drawAreas({\n    context,\n    features,\n    fillStyle,\n    strokeStyle,\n    strokeWidth = 1,\n    stopCondition\n  }) {\n    let i = 0;\n    const n = features.length;\n    for (i; i < n; i++) {\n      const area = features[i];\n      if (stopCondition) {\n        if (stopCondition(area)) { continue; }\n      }\n\n      const fill = isFunction(fillStyle) ? fillStyle(area) : fillStyle;\n      const stroke = isFunction(strokeStyle) ? strokeStyle(area) : strokeStyle;\n      const strokeW = isFunction(strokeWidth) ? strokeWidth(area) : strokeWidth;\n      // draw zones with different colors to do\n      this.drawArea({\n        area,\n        context,\n        fillStyle:fill,\n        strokeStyle:stroke,\n        strokeWidth:strokeW,\n      });\n    }\n  }\n}\n\nexport default CanvasDelegate;\n\n\n\n// WEBPACK FOOTER //\n// src/components/atoms/CanvasDelegate/index.js"],"mappings":";;;;;;;;;;;;;;AAAA;AACA;AAAA;AACA;;;AAAA;AACA;;;;;AAEA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;;;;;;AAGA;;;;;;;;;AApIA;AACA;;;;;;;;A","sourceRoot":""}