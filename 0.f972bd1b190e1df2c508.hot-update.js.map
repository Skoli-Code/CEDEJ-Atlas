{"version":3,"file":"0.f972bd1b190e1df2c508.hot-update.js","sources":["webpack:///src/components/molecules/LegendTooltips/index.js?204e"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Markdown from 'react-markdown';\nimport Tooltip from 'react-tooltip';\nimport styled from 'styled-components';\nimport { font } from 'styled-theme';\nimport * as circles from 'utils/circles';\nimport * as aridity from 'utils/aridity';\nimport { visibleTypes, updateTooltips } from 'utils';\n\nconst LegendTooltipContent = styled.div`\n  max-width: 400px;\n  font-weight: normal;\n`;\nconst Holder = styled.div`\n  position: relative;\n  z-index: 2000;\n  font-family: ${font('primary')};\n`;\n\nclass LegendTooltips extends Component {\n  shouldComponentUpdate({ layers: toLayers, filters: toFilters }) {\n    const {\n      layers: {\n        circles: { visible: circlesVisible },\n        aridity: { visible: aridityVisible },\n      },\n      filters: {\n        circles: { types },\n        aridity,\n      },\n    } = this.props;\n\n    const shouldUpdateTooltips = (\n      circlesVisible !== toLayers.circles.visible\n    ) || (\n      aridityVisible !== toLayers.aridity.visible\n    ) || (\n      visibleTypes(types).length !== visibleTypes(toFilters.circles.types).length\n    ) || (\n      visibleTypes(aridity).length !== visibleTypes(toFilters.aridity).length\n    );\n\n    if (shouldUpdateTooltips) {\n      updateTooltips();\n    }\n\n    return false;\n  }\n  render() {\n    return (\n      <Holder>\n        <Tooltip id=\"tooltip-nb-months\">\n          <LegendTooltipContent>\n            <span>\n              Recevant moins de 30mm de précipitations\n            </span>\n          </LegendTooltipContent>\n        </Tooltip>\n        <Tooltip id=\"tooltip-regime\" place=\"right\">\n          <LegendTooltipContent>\n            <span>\n              Et régime des précipitations\n            </span>\n          </LegendTooltipContent>\n        </Tooltip>\n\n        { aridity.allAridity()\n            .map(({ value, description }, key) => (\n              <Tooltip\n                key={key}\n                place=\"right\"\n                id={`tooltip-aridity-${value}`}\n              >\n                <LegendTooltipContent>\n                  <Markdown source={description} />\n                </LegendTooltipContent>\n              </Tooltip>\n            )\n        )}\n        { circles.allDroughtRegimes()\n            .map(({ value, regime_full }, key) => (\n              <Tooltip\n                key={key}\n                place=\"right\"\n                class=\"custom-tooltip\"\n                id={`tooltip-circle-${value}`}\n              >\n                <LegendTooltipContent>\n                  <Markdown source={regime_full} />\n                </LegendTooltipContent>\n              </Tooltip>\n          ))\n        }\n      </Holder>\n    );\n  }\n}\n\nLegendTooltips.propTypes = {\n  layers: PropTypes.object,\n  filters: PropTypes.object,\n};\n\nexport default LegendTooltips;\n\n\n\n// WEBPACK FOOTER //\n// src/components/molecules/LegendTooltips/index.js"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;;;;;;;;;;;AACA;AAIA;AACA;AAKA;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAUA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AAQA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AACA;AADA;AALA;AADA;AAYA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AACA;AADA;AANA;AADA;AA9BA;AA6CA;;;;;;AAGA;AACA;AACA;AAFA;AACA;AAIA;;;;;;;;;AA9FA;AACA;AAGA;AACA;AAKA;AACA;;;;;;;;A","sourceRoot":""}